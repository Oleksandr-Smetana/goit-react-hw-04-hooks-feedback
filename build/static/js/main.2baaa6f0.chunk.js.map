{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","FeedbackOptions","options","onLeaveFeedback","feedbackOptions","map","item","feedbackButton","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","statisticsItem","Notification","message","Feedback","useState","setGood","setNeutral","setBad","getTotalFeedback","key","Object","keys","app","btnName","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,qC,kBCAvFD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,eAAiB,0C,iBCA9FD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,IAAM,mB,qICET,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,oBAAIC,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCJQ,SAASG,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKJ,UAAWC,IAAEI,gBAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,wBACEP,UAAWC,IAAEO,eAEbC,KAAK,SACLC,QAAS,kBAAMN,EAAgBG,IAJjC,SAMGA,GAJIA,Q,oBCNA,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIhB,UAAWC,IAAEgB,eAAjB,UACE,qBAAIjB,UAAWC,IAAEiB,eAAjB,mBACQ,+BAAON,OAEf,qBAAIZ,UAAWC,IAAEiB,eAAjB,sBACW,+BAAOL,OAElB,qBAAIb,UAAWC,IAAEiB,eAAjB,kBACO,+BAAOJ,OAEd,qBAAId,UAAWC,IAAEiB,eAAjB,oBACS,+BAAOH,OAEhB,qBAAIf,UAAWC,IAAEiB,eAAjB,gCACqB,iCAAOF,EAAP,a,oBCtBZ,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGpB,UAAWC,IAAEmB,QAAhB,SAA0BA,I,oBCKpB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOT,EAAP,KAAgBW,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOR,EAAP,KAAYW,EAAZ,KAmBMC,EAAmB,WACvB,OAAOd,EAAOC,EAAUC,GAQpBa,EAAMC,OAAOC,KAAK,CAAEjB,OAAMC,UAASC,QACzC,OACE,sBAAKd,UAAWC,IAAE6B,IAAlB,UACE,cAACjC,EAAD,CAASC,MAAM,wBAAf,SACE,cAACI,EAAD,CAAiBC,QAASwB,EAAKvB,gBA7Bf,SAAA2B,GACpB,OAAQA,GACN,IAAK,OACH,OAAOR,EAAQX,EAAO,GAExB,IAAK,UACH,OAAOY,EAAWX,EAAU,GAE9B,IAAK,MACH,OAAOY,EAAOX,EAAM,SAuBtB,cAACjB,EAAD,CAASC,MAAM,aAAf,SACG4B,IACC,cAACf,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,mBAjBDgB,KAAKC,MAAOrB,EAAOc,IAAsB,OAoB1C,cAACP,EAAD,CAAcC,QAAQ,4BCnDhCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2baaa6f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__1WaUb\",\"statisticsItem\":\"Statistics_statisticsItem__19QGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptions\":\"FeedbackOptions_feedbackOptions__3eONJ\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__17ZnD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3oNTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3YD1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1i7hX\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.feedbackOptions}>\n      {options.map(item => (\n        <button\n          className={s.feedbackButton}\n          key={item}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(item)}\n        >\n          {item}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.statisticsList}>\n      <li className={s.statisticsItem}>\n        Good: <span>{good}</span>\n      </li>\n      <li className={s.statisticsItem}>\n        Neutral: <span>{neutral}</span>\n      </li>\n      <li className={s.statisticsItem}>\n        Bad: <span>{bad}</span>\n      </li>\n      <li className={s.statisticsItem}>\n        Total: <span>{total}</span>\n      </li>\n      <li className={s.statisticsItem}>\n        Positive feedback: <span>{positivePercentage}%</span>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport s from './App.module.css';\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  // добавляет +1 отзыв в блок статистики при клике на кнопки\n  const leaveFeedback = btnName => {\n    switch (btnName) {\n      case 'good':\n        return setGood(good + 1);\n\n      case 'neutral':\n        return setNeutral(neutral + 1);\n\n      case 'bad':\n        return setBad(bad + 1);\n\n      default:\n    }\n  };\n\n  // определяет общее количество отзывов\n  const getTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  // определяет процент положительных отзывов\n  const getPositiveFeedbackPercentage = () => {\n    return Math.round((good / getTotalFeedback()) * 100);\n  };\n\n  const key = Object.keys({ good, neutral, bad });\n  return (\n    <div className={s.app}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={key} onLeaveFeedback={leaveFeedback} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {getTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={getTotalFeedback()}\n            positivePercentage={getPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given.\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nFeedback.propTypes = {\n  item: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}